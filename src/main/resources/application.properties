spring.profiles.active=dev
 
# app
app.name=brainscope
app.home=C:/temp/${app.name}
 
# server
server.port=8080
server.context-path=/${app.name}
server.tomcat.basedir=/${app.home}
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.prefix=access
server.tomcat.accesslog.suffix=.log
server.tomcat.access-log-enabled=true
server.tomcat.access-log-pattern=time:%t    host:%h thread:%I   sessionid:%S    protocol:%H method:%m   path:%U%q   status:%s   size:%b reqtime_millis:%D

# JDBC
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://52.196.91.50:5432/takano
spring.datasource.username=postgres
spring.datasource.password=SpsPlat0330
spring.datasource.max-active=1
spring.datasource.max-idle=1

# log
logging.path=${app.home}/logs
logging.file=${app.name}.log
logging.level.root=INFO
logging.pattern.file="%d{yyyy-MMM-dd HH:mm:ss.SSS} %p [%t] %c %m [%file:%line]%n"
logging.pattern.console="%d{yyyy-MMM-dd HH:mm:ss.SSS} %p [%t] %c %m [%file:%line]%n"

# security
security.basic.enabled=true
security.basic.realm=${app.name}
security.basic.path=/**
security.sessions=stateless
security.user.name=name
security.user.password=password
security.user.role=USER

# log
log.moveUp = "【アクション】スコープアドレスの移動（上り） | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, moveUpFlag={}"
log.moveDown = "【アクション】スコープアドレスの移動（下り） | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, moveDownFlag={}"
log.generateNeuron = "【アクション】ニューロンの生成 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, generateFlag={}"
log.generateTree = "【アクション】木構造の生成 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, generateFlag={}"
log.extinctNeuron = "【アクション】ニューロンの削除 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, extinctFlag={}"
log.extinctTree = "【アクション】木構造の削除 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, extinctFlag={}"
log.update = "【アクション】ニューロンの更新 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, updateFlag={}"
log.insertNeuron = "【アクション】ニューロンの挿入 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, insertFlag={}"
log.insertTree = "【アクション】木構造の挿入 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, insertFlag={}"
log.insertNeuronLevel = "【アクション】ニューロンレベルの調整 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, insertFlag={}"
log.activate = "【アクション】ニューロンレベルの調整 | 【経過時間】{}ms | 【パラメータ】id={}, neuronLevel={}, activateFlag={}"